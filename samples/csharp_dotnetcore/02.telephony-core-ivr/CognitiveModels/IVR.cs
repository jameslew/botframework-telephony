// <auto-generated>
// Code generated by LUISGen .\FlightBooking.json -cs Luis.FlightBooking -o .
// Tool github: https://github.com/microsoft/botbuilder-tools
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>
using Newtonsoft.Json;
using System.Collections.Generic;
using Microsoft.Bot.Builder;
using Microsoft.Bot.Builder.AI.Luis;
using Newtonsoft.Json.Linq;

namespace Microsoft.BotBuilderSamples
{
    public class IVR : RecognizerResult, IRecognizerConvert
    {
        public enum Intent
        {
            FindNearestStore,
            OrderStatus,
            POStatus,
            TaxForms,
            LeavePolicy,
            Cancel,
            None
        };
        public IDictionary<Intent, IntentScore> TypedIntents;

        public new void Convert(dynamic result)
        {
            JObject app = JObject.Parse(JsonConvert.SerializeObject(result, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore }));
            Text = app["text"].ToString();
            AlteredText = app["alteredText"]?.ToString();
            Properties = app["properties"]?.ToObject<IDictionary<string, object>>();
            Intents = app["intents"]?.ToObject<IDictionary<string, IntentScore>>();
            TypedIntents = app["intents"]?.ToObject<IDictionary<Intent, IntentScore>>();
            Entities = (JObject)app["entities"];
        }

        public (Intent intent, double score) TopIntent()
        {
            Intent maxIntent = Intent.None;
            var max = 0.0;
            foreach (var entry in TypedIntents)
            {
                if (entry.Value.Score > max)
                {
                    maxIntent = entry.Key;
                    max = entry.Value.Score.Value;
                }
            }
            return (maxIntent, max);
        }
    }
}
